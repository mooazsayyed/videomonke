<p style="color: green"><%= notice %></p>

<div class="header-container" style="display: flex; justify-content: center; align-items: center; margin-bottom: 20px;">
  <h1>All Posts</h1>
  <%= link_to "New post", new_post_path, class: "btn btn-primary", style: "position: absolute; right: 20px;" %>
</div>

<div id="posts">
  <% @posts.each do |post| %>
    <div class="post-container">
      <% if post.image.attached? %>
        <div class="thumbnail-container">
          <%= link_to post_path(post) do %>
            <%= image_tag url_for(post.image), class: 'thumbnail' %>
            <% if post.video.attached? %>
              <%= video_tag url_for(post.video), muted: true, controls: false, class: 'video-thumbnail' %>
            <% end %>
            <div class="play-button">&#9658;</div>
          <% end %>
        </div>
      <% else %>
        <p>No image available</p>
      <% end %>

      <% if post.video.attached? && !post.image.attached? %>
        <div class="media-container">
          <%= video_tag url_for(post.video), autoplay: true, muted: true, class: 'media-item' %>
        </div>
      <% elsif !post.video.attached? && !post.image.attached? %>
        <p>No video available</p>
      <% end %>

      <% if post.title.present? %>
        <h3><%= post.title %></h3>
      <% end %>

      <div class="post-buttons">
        <%= link_to "Show this post", post, class: "btn btn-secondary" %>
      </div>
    </div>
  <% end %>
</div>


<style>
  /* Styling for the posts grid */
  #posts {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
  }

  /* Styling for the post container */
  .post-container {
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    background-color: #f9f9f9;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .thumbnail-container {
    position: relative;
    cursor: pointer;
  }

  .thumbnail {
    width: 100%; /* Ensure the image takes the full width of its container */
    height: 200px; /* Set a fixed height for all thumbnails */
    object-fit: cover; /* Ensure the image covers the container while maintaining aspect ratio */
    border-radius: 8px;
  }

  .video-thumbnail {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 200px;
    object-fit: cover;
    border-radius: 8px;
    visibility: hidden;
  }

  .play-button {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 2rem;
    color: white;
    background: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    padding: 10px;
    visibility: visible;
  }

  .media-container {
    margin-top: 10px;
  }

  .media-item {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  .post-buttons {
    display: flex;
    justify-content: flex-start;
    margin-top: 10px;
  }

  /* Button styles */
  .btn {
    display: inline-block;
    padding: 8px 15px;
    background-color: #007bff;
    color: #fff;
    text-decoration: none;
    border-radius: 5px;
    font-weight: bold;
    transition: background-color 0.3s ease;
    margin: 5px;
  }

  .btn-primary {
    background-color: #007bff;
  }

  .btn-primary:hover {
    background-color: #0056b3;
  }

  .btn-secondary {
    background-color: #6c757d;
  }

  .btn-secondary:hover {
    background-color: #5a6268;
  }

  h1 {
    color: #333;
    font-size: 2em;
    text-align: center;
    margin-bottom: 20px;
  }
</style>
<script>
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.thumbnail-container').forEach(function(container) {
    const video = container.querySelector('video');
    const playButton = container.querySelector('.play-button');

    if (video) {
      container.addEventListener('mouseenter', function() {
        video.style.visibility = 'visible'; // Show the video
        playButton.style.visibility = 'hidden'; // Hide the play button

        // Ensure the video plays
        video.play().catch(function(error) {
          console.error('Error playing video:', error);
        });
      });

      container.addEventListener('mouseleave', function() {
        video.pause(); // Pause the video
        video.currentTime = 0; // Reset video to the beginning
        video.style.visibility = 'hidden'; // Hide the video
        playButton.style.visibility = 'visible'; // Show the play button again
      });
    }
  });
});

</script>
